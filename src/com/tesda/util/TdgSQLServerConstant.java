/*
 * Object Name : TdgSQLServerConstant.java
 * Modification Block
 * ------------------------------------------------------------------
 * S.No.	Name 			Date			Bug_Fix_No			Desc
 * ------------------------------------------------------------------
 * 	1.	  vkrish14		12:23:34 PM				Created
 * ------------------------------------------------------------------
 * Copyrights: 2015 Capgemini.com
 */
package com.tesda.util;

/**
 * @author vkrish14
 *
 */
public class TdgSQLServerConstant extends TdgCentralConstant{

	public static final String PRIMARY = "P";
	public static final String FOREIGN = "R";
	public static final String UNIQUE = "U";
	public static final String PRI = "P";
	public static final String MUL = "R";
	public static final String UNI = "U";
	public static final String PRIMARY_KEY = "PRIMARY KEY";
	public static final String FOREIGN_KEY = "FOREIGN KEY";
	public static final String NUMERIC_PRECISION = "NUMERIC_PRECISION";
	public static final String CHARACTER_MAXIMUM_LENGTH = "CHARACTER_MAXIMUM_LENGTH";
	public static final String DATETIME_PRECISION = "DATETIME_PRECISION";
	public static final String SQLSERVER_SEQUENCE_VALUE = " SELECT NEXT VALUE FOR {0} AS IDGEN FROM SYSIBM.DUAL";
	public static final String UNIQUE_KEY = "UNIQUE";
	public static final String IS_NULLABLE = "NO";
	public static final String SQLSERVER_DATE_FORMATE = "SELECT VARIABLE_VALUE AS VALUE FROM INFORMATION_SCHEMA.SESSION_VARIABLES WHERE VARIABLE_NAME='DATE_FORMAT'";
	//public static final String SQLSERVER_PRIMARY_KEY = "( SELECT ISNULL(MAX({0}),0) AS IDGEN from COL.{1} )";
	public static final String SQLSERVER_PRIMARY_KEY = "( SELECT ISNULL(MAX({0}),0) AS IDGEN from {1} )";
	//public static final String SQLSERVER_PRIMARY_KEY_FINAL = " (SELECT ISNULL(MAX(CONVERT(INT,REPLACE({0},'{#}',''))),0) AS IDGEN FROM COL.{1} )";
	public static final String SQLSERVER_PRIMARY_KEY_FINAL = " (SELECT ISNULL(MAX(CONVERT(INT,REPLACE({0},'{#}',''))),0) AS IDGEN FROM {1} )";
	public static final String SQLSERVER_GET_DATE_COLUMNS_OF_TABLE = "SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='{0}' AND DATETIME_PRECISION IS NOT NULL";
	//public static final String SQLSERVER_MAX_COLUMN_VALUE = "( SELECT ISNULL(MAX({0}),0) AS IDGEN from COL.{1} )";
	public static final String SQLSERVER_MAX_COLUMN_VALUE = "( SELECT ISNULL(MAX({0}),0) AS IDGEN from {1} )";
	//public static final String SQLSERVER_GET_ALL_TABLES = "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES ORDER BY TABLE_NAME";
	public static final String SQLSERVER_GET_ALL_TABLES = "SELECT TABLE_SCHEMA +'.'+ TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.TABLES ORDER BY TABLE_NAME";
	public static final String SQLSERVER_GET_ALL_COLUMNS = "SELECT COLUMN_NAME,TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS ORDER BY TABLE_NAME";
	//public static final String SQLSERVER_GET_ALL_COLUMNS_BY_TAB = "SELECT COLUMN_NAME,TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME IN ({0} )";
	public static final String SQLSERVER_GET_ALL_COLUMNS_BY_TAB = "SELECT COLUMN_NAME,TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = {0} AND TABLE_NAME IN ({1}) ";
	
	//public static final String SQLSERVER_GET_ALL_COLUMNS_BY_TAB = "SELECT COLUMN_NAME,TABLE_SCHEMA +'.'+ TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME IN  ({0})";
	//public static final String SQLSERVER_GET_COLS_TABS_SEQUENCE = "SELECT COLUMN_NAME,ORDINAL_POSITION AS COLUMN_ID FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='{0}' ORDER BY ORDINAL_POSITION";
	public static final String SQLSERVER_GET_COLS_TABS_SEQUENCE = "SELECT COLUMN_NAME,ORDINAL_POSITION AS COLUMN_ID FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = {0} AND TABLE_NAME IN ({1}) ORDER BY ORDINAL_POSITION";
	//public static final String SQLSERVER_GET_PK_COLUMN_TYPE = "SELECT DISTINCT(IKU.COLUMN_NAME),IC.DATA_TYPE,IC.CHARACTER_MAXIMUM_LENGTH,IC.NUMERIC_PRECISION,IC.DATETIME_PRECISION,IKU.TABLE_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE IKU,INFORMATION_SCHEMA.COLUMNS IC WHERE IKU.TABLE_NAME=IC.TABLE_NAME AND IKU.COLUMN_NAME=IC.COLUMN_NAME AND IKU.CONSTRAINT_NAME='{0}' AND IKU.TABLE_NAME='{1}'";
	public static final String SQLSERVER_GET_PK_COLUMN_TYPE = "SELECT DISTINCT(IKU.COLUMN_NAME),IC.DATA_TYPE,IC.CHARACTER_MAXIMUM_LENGTH,IC.NUMERIC_PRECISION,IC.DATETIME_PRECISION,IKU.TABLE_SCHEMA +'.'+ IKU.TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE IKU,INFORMATION_SCHEMA.COLUMNS IC WHERE IKU.TABLE_NAME=IC.TABLE_NAME AND IKU.COLUMN_NAME=IC.COLUMN_NAME AND IKU.CONSTRAINT_NAME='{0}' AND  IKU.TABLE_SCHEMA = {1} AND IKU.TABLE_NAME IN ({2})";
	public static final String SQLSERVER_GET_ALL_CONSTRAINTS_COLUMNS = "SELECT DISTINCT(CC.COLUMN_NAME),CC.DATA_TYPE,CC.CHARACTER_MAXIMUM_LENGTH,CC.NUMERIC_PRECISION,CC.DATETIME_PRECISION,CC.TABLE_NAME,CC.IS_NULLABLE FROM INFORMATION_SCHEMA.COLUMNS CC,INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC WHERE (TC.CONSTRAINT_TYPE IN ('PRIMARY KEY','FOREIGN KEY') OR CC.IS_NULLABLE='NO')";
	/*public static final String SQLSERVER_GET_SEQUENCE_OF_COLUMNS1 = "SELECT COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,DATETIME_PRECISION,TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE  TABLE_NAME='{0}' ORDER BY ORDINAL_POSITION ";
	public static final String SQLSERVER_GET_SEQUENCE_OF_COLUMNS2 = "SELECT COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,DATETIME_PRECISION,TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME='{0}'  AND COLUMN_NAME != '{1}' ORDER BY ORDINAL_POSITION ";*/
	
	public static final String SQLSERVER_GET_SEQUENCE_OF_COLUMNS1 = "SELECT COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,DATETIME_PRECISION,TABLE_SCHEMA +'.'+ TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = {0} AND TABLE_NAME IN ({1}) ORDER BY ORDINAL_POSITION ";
	public static final String SQLSERVER_GET_SEQUENCE_OF_COLUMNS2 = "SELECT COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,DATETIME_PRECISION,TABLE_SCHEMA +'.'+ TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = {0} AND TABLE_NAME IN ({1})  AND COLUMN_NAME != '{1}' ORDER BY ORDINAL_POSITION ";


	
	//public static final String SQLSERVER_GET_TABLES_BY_COLUMNS = "SELECT COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,DATETIME_PRECISION,TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME IN ";
	public static final String SQLSERVER_GET_TABLES_BY_COLUMNS = "SELECT COLUMN_NAME,DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,DATETIME_PRECISION,TABLE_SCHEMA +'.'+ TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME IN ";
	
	/*public static final String SQLSERVER_GET_TABLE_NAME_BY_FK = "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT UNIQUE_CONSTRAINT_NAME FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE TABLE_NAME='{0}' AND COLUMN_NAME='{1}'))";*/
	public static final String SQLSERVER_GET_TABLE_NAME_BY_FK = "SELECT TABLE_SCHEMA +'.'+ TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT UNIQUE_CONSTRAINT_NAME FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE TABLE_SCHEMA = {0} AND TABLE_NAME IN ({1}) AND COLUMN_NAME='{2}'))";
	
//	public static final String SQLSERVER_GET_SEQUENCE_TABLES = "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT UNIQUE_CONSTRAINT_NAME FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE TABLE_NAME='{0}' AND CONSTRAINT_TYPE='FOREIGN KEY'))";
	public static final String SQLSERVER_GET_SEQUENCE_TABLES = "SELECT TABLE_SCHEMA+'.'+TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT UNIQUE_CONSTRAINT_NAME FROM INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA = {0} AND TABLE_NAME IN ({1}) AND CONSTRAINT_TYPE='FOREIGN KEY'))";
	//public static final String SQLSERVER_GET_CONSTRAINTS_OF_TABLES = "SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE TABLE_NAME='{0}'";
	public static final String SQLSERVER_GET_CONSTRAINTS_OF_TABLES = "SELECT CONSTRAINT_NAME,CONSTRAINT_TYPE FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE TABLE_SCHEMA = {0} AND TABLE_NAME IN ({1})";
	public static final String SQLSERVER_ONE_TO_ONE_RELATIONS_FIND_TABLES = "SELECT * FROM (SELECT COLUMN_NAME,TABLE_NAME,CONSTRAINT_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE CONSTRAINT_NAME IN (SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE='UNIQUE')) "
			+ "TT JOIN (SELECT COLUMN_NAME,TABLE_NAME,CONSTRAINT_NAME FROM INFORMATION_SCHEMA.KEY_COLUMN_USAGE WHERE CONSTRAINT_NAME IN (SELECT CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_TYPE='FOREIGN KEY')) TTT ON TT.COLUMN_NAME=TTT.COLUMN_NAME";
	public static final String SQLSERVER_CONSTRAINTS_RELATIONS_TABLES = "SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS WHERE CONSTRAINT_NAME IN (SELECT RC.UNIQUE_CONSTRAINT_NAME FROM INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC,INFORMATION_SCHEMA.REFERENTIAL_CONSTRAINTS RC WHERE RC.CONSTRAINT_NAME=TC.CONSTRAINT_NAME AND TC.CONSTRAINT_NAME='{0}' AND TC.TABLE_NAME='{1}')";
	// Specific case we had included this constant
	//public static final String SQLSERVER_GET_NOT_NULL_CONSTRAINTS_OF_TABLES = "SELECT DISTINCT(CC.COLUMN_NAME),CC.DATA_TYPE,CC.CHARACTER_MAXIMUM_LENGTH,CC.NUMERIC_PRECISION,CC.DATETIME_PRECISION,CC.TABLE_NAME,CC.IS_NULLABLE FROM INFORMATION_SCHEMA.COLUMNS CC,INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC WHERE  CC.TABLE_SCHEMA={0} AND CC.TABLE_NAME={1}   AND (TC.CONSTRAINT_TYPE IN ('UNIQUE','FOREIGN KEY') OR CC.IS_NULLABLE='NO') AND TC.CONSTRAINT_TYPE !='PRIMERY KEY'";
	public static final String SQLSERVER_GET_NOT_NULL_CONSTRAINTS_OF_TABLES = "SELECT DISTINCT(CC.COLUMN_NAME),CC.DATA_TYPE,CC.CHARACTER_MAXIMUM_LENGTH,CC.NUMERIC_PRECISION,CC.DATETIME_PRECISION,CC.TABLE_SCHEMA+'.'+CC.TABLE_NAME AS TABLE_NAME,CC.IS_NULLABLE FROM INFORMATION_SCHEMA.COLUMNS CC,INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC WHERE  CC.TABLE_SCHEMA={0} AND CC.TABLE_NAME={1}    AND (TC.CONSTRAINT_TYPE IN ('UNIQUE','FOREIGN KEY') OR CC.IS_NULLABLE='NO') AND TC.CONSTRAINT_TYPE !='PRIMERY KEY'";
	
	public static final String SQLSERVER_GET_COLUMNS_OF_TABS_APART_CONSTRAINTS = "SELECT DISTINCT(COLUMN_NAME),DATA_TYPE,CHARACTER_MAXIMUM_LENGTH,NUMERIC_PRECISION,DATETIME_PRECISION,TABLE_NAME,IS_NULLABLE FROM INFORMATION_SCHEMA.COLUMNS WHERE COLUMN_NAME NOT IN(SELECT DISTINCT(CC.COLUMN_NAME) FROM INFORMATION_SCHEMA.COLUMNS CC,INFORMATION_SCHEMA.TABLE_CONSTRAINTS TC WHERE CC.TABLE_NAME = '{0}' AND (TC.CONSTRAINT_TYPE IN ('PRIMARY KEY','FOREIGN KEY') OR CC.IS_NULLABLE='NO')) AND TABLE_NAME='{0}'";
	//public static final String SQLSERVER_GET_AUTO_INCREMENT_COLUMNS="SELECT COLUMN_NAME, TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE  TABLE_NAME IN ('DBO') AND COLUMNPROPERTY(OBJECT_ID(TABLE_NAME), COLUMN_NAME, 'ISIDENTITY') = 1";
	public static final String SQLSERVER_GET_AUTO_INCREMENT_COLUMNS="SELECT COLUMN_NAME, TABLE_SCHEMA +'.'+ TABLE_NAME AS TABLE_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_SCHEMA = {0} AND TABLE_NAME IN ({1}) AND COLUMNPROPERTY(OBJECT_ID(TABLE_NAME), COLUMN_NAME, 'ISIDENTITY') = 1";
	
	public static final String SQLSERVER_CHUBB_COMPUTED_COLUMNS="SELECT DISTINCT(COLUMN_NAME) FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME IN ( '{0}') and COLUMNPROPERTY(OBJECT_ID(TABLE_NAME),COLUMN_NAME,'IsComputed') =1";
	public static final String SQLSERVER_CHUBB_UNQ_DEF ="SELECT ISNULL(MAX(CONVERT(INT,REPLACE({1},'{#}',''))),0) AS IDGEN FROM {0} WHERE {1} NOT IN(SELECT {1} FROM {0} WHERE ISNUMERIC({1}) = 0) and {1} not like '%[^0-9]%' and {1} != ''";

}
